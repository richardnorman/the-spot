{"version":3,"sources":["components/SpotCard/SpotCard.js","components/AddSpotButton/AddSpotButton.js","components/NavBar/NavBar.js","actions.js","constants.js","components/AddSpot/AddSpot.js","components/SignIn/SignIn.js","components/Register/Register.js","App.js","serviceWorker.js","reducers.js","index.js"],"names":["useStyles","makeStyles","root","maxWidth","media","height","SpotCard","title","description","image","coords","classes","className","Card","CardActionArea","CardMedia","CardContent","Typography","gutterBottom","variant","component","color","CardActions","Button","target","href","size","theme","extendedIcon","marginRight","spacing","AddSpotButton","_","Fab","flexGrow","menuButton","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","NavBar","useState","drawerOpen","setDrawerOpen","dispatch","useDispatch","AppBar","style","background","Toolbar","IconButton","edge","aria-label","onClick","noWrap","InputBase","placeholder","input","inputProps","onChange","event","type","payload","value","Drawer","anchor","open","onClose","to","textDecoration","paddingRight","cursor","AddSpot","spotList","useSelector","state","modifySpotList","spotName","setSpotName","spotDescription","setSpotDescription","spotLocation","setSpotLocation","useCurrentLocation","setUseCurrentLocation","spotImage","setSpotImage","locationFound","latitude","longitude","locationError","error","alert","prompt","TextField","id","label","FormControlLabel","control","Switch","name","checked","navigator","geolocation","getCurrentPosition","disabled","SignIn","initialValues","email","password","onSubmit","values","a","JSON","stringify","Register","registerName","setRegisterName","registerEmail","setRegisterEmail","registerPassword","setRegisterPassword","fetch","method","headers","body","then","response","json","catch","err","App","searchText","changeSearch","DisplaySpots","props","list","length","textAlign","marginTop","fontSize","map","spot","exact","path","undefined","filter","toLowerCase","includes","Boolean","window","location","hostname","match","initialStateSpotList","initialSearchText","rootReducer","combineReducers","action","store","createStore","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.2cbc56a7.chunk.js","sourcesContent":["import React, {Fragment} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport './SpotCard.css';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: '100%',\r\n    },\r\n    media: {\r\n        height: 150,\r\n    },\r\n});\r\n\r\nconst SpotCard = ({ title, description, image, coords }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className='card-container'>\r\n            <Card className={classes.root}>\r\n                <CardActionArea>\r\n                    <CardMedia\r\n                        className={classes.media}\r\n                        image={image}\r\n                    />\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            {title}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            {description}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n                <CardActions>\r\n                    <Button target='_blank' href={`https://www.google.com/maps/place/${coords}`} size=\"small\" color=\"primary\">\r\n                        View Location\r\n                    </Button>\r\n                </CardActions>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SpotCard;","import React from 'react';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport './AddSpotButton.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    extendedIcon: {\r\n      marginRight: theme.spacing(1),\r\n    }\r\n  }));\r\n\r\nconst AddSpotButton = _ => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Fab className='floating-add-spot' variant=\"extended\">\r\n            <AddIcon className={classes.extendedIcon} />\r\n        Add a Spot\r\n        </Fab>\r\n    );\r\n}\r\n\r\nexport default AddSpotButton;","import React, {useState, Fragment} from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport { changeSearch } from '../../actions';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n      display: 'none',\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'block',\r\n      },\r\n    },\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(1),\r\n        width: 'auto',\r\n      },\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: '20ch',\r\n        '&:focus': {\r\n          width: '20ch',\r\n        },\r\n      },\r\n    },\r\n  }));\r\n\r\nconst NavBar = () => {\r\n    const classes = useStyles();\r\n    const [drawerOpen, setDrawerOpen] = useState(false);\r\n    const dispatch = useDispatch();\r\n    \r\n    const handleSearchChange = event => {\r\n        dispatch(changeSearch(event.target.value));\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n                <AppBar style={{background: 'white', color: 'black' }} position=\"sticky\">\r\n                <Toolbar>\r\n                <IconButton\r\n                    edge=\"start\"\r\n                    className={classes.menuButton}\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    onClick={() => drawerOpen ? setDrawerOpen(false) : setDrawerOpen(true)}\r\n                >\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                    My Spots\r\n                </Typography>\r\n                <div className={classes.search}>\r\n                    <div className={classes.searchIcon}>\r\n                    <SearchIcon />\r\n                    </div>\r\n                    <InputBase\r\n                    placeholder=\"Search your spots\"\r\n                    classes={{\r\n                        root: classes.inputRoot,\r\n                        input: classes.inputInput,\r\n                    }}\r\n                    inputProps={{ 'aria-label': 'search' }}\r\n                    onChange={handleSearchChange}\r\n                    />\r\n                </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer anchor={\"left\"} open={drawerOpen} onClose={() => setDrawerOpen(false)}>\r\n                <Link to='/the-spot/sign-in' style={{textDecoration: 'none', color: 'black'}}>\r\n                    <h2 style={{paddingLeft: '15px', paddingRight: '60px', cursor: 'pointer'}}>Sign out</h2>\r\n                </Link>\r\n            </Drawer>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default NavBar;","import {\r\n    ADD_SPOT, CHANGE_SEARCH\r\n} from './constants';\r\n\r\nexport const addSpot = spot => {\r\n    return {\r\n        type: ADD_SPOT,\r\n        payload: spot\r\n    }\r\n}\r\n\r\nexport const changeSearch = searchText => {\r\n    return {\r\n        type: CHANGE_SEARCH,\r\n        payload: searchText\r\n    }\r\n}","export const ADD_SPOT = 'ADD_SPOT';\r\nexport const CHANGE_SEARCH = 'CHANGE_SEARCH';","import React, { Fragment, useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport './AddSpot.css';\r\nimport App from '../../App';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect, useSelector, useDispatch } from 'react-redux';\r\nimport { addSpot } from '../../actions';\r\nimport {\r\n    ADD_SPOT\r\n} from '../../constants';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: '90%',\r\n    },\r\n    media: {\r\n        height: 200,\r\n    },\r\n});\r\n\r\nconst AddSpot = () => {\r\n    const spotList = useSelector(state => state.modifySpotList.spotList);\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n\r\n    const [spotName, setSpotName] = useState('');\r\n    const [spotDescription, setSpotDescription] = useState('');\r\n    const [spotLocation, setSpotLocation] = useState('');\r\n    const [useCurrentLocation, setUseCurrentLocation] = useState(false);\r\n    const [spotImage, setSpotImage] = useState('');\r\n\r\n    const handleAddImageClicked = _ => {\r\n        setSpotImage(prompt('Enter image URL:') || '');\r\n    }\r\n\r\n    const handleUseCurrentLocationChanged = _ => {\r\n        if (useCurrentLocation) {\r\n            //dont use current location and reset the current spot location\r\n            setSpotLocation('');\r\n            setUseCurrentLocation(false);\r\n        } else {\r\n            //use the users current location\r\n            setUseCurrentLocation(true);\r\n            getCurrentLocation();\r\n        }\r\n    }\r\n\r\n    function getCurrentLocation() {\r\n        navigator.geolocation.getCurrentPosition(locationFound, locationError);\r\n    }\r\n\r\n    function locationFound(position) {\r\n        setSpotLocation(`${position.coords.latitude}, ${position.coords.longitude}`);\r\n    }\r\n\r\n    function locationError(error) {\r\n        alert('Location can not be found, try connecting to a network.' + error);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className='editable-card'>\r\n                <Card className={classes.root}>\r\n                        <CardMedia\r\n                            className={classes.media}\r\n                            image={spotImage === '' ? 'https://bhmlib.org/wp-content/themes/cosimo-pro/images/no-image-box.png' : spotImage}\r\n                        />\r\n                        <CardContent>\r\n                        <Button onClick={handleAddImageClicked} className='add-image-button' variant=\"contained\">Add image</Button>\r\n                            <TextField className='inputs' id='standard-basic' label='Name' onChange={(event => setSpotName(event.target.value))}/>\r\n                            <TextField className='inputs' id='standard-basic' label='Description' onChange={(event => setSpotDescription(event.target.value))}/>\r\n                            <FormControlLabel\r\n                                className='use-location-switch'\r\n                                control={\r\n                                <Switch                                    \r\n                                    name=\"checkedB\"\r\n                                    checked={useCurrentLocation}\r\n                                    onChange={handleUseCurrentLocationChanged}\r\n                                    color=\"primary\"\r\n                                />\r\n                                }\r\n                                label=\"Use current location\"\r\n                            />\r\n                            {useCurrentLocation ? \r\n                                null :\r\n                                <TextField \r\n                                className='inputs' \r\n                                id='standard-basic' \r\n                                label='Location' \r\n                                onChange={event => setSpotLocation(event.target.value)}/>}\r\n                        </CardContent>\r\n                </Card>\r\n            </div>\r\n            <Link to='/the-spot/' style={{ textDecoration: 'none' }}>\r\n                <Fab disabled={(spotName === '' || spotLocation === '') ? true : false} onClick={() => {\r\n                    dispatch(addSpot([\r\n                            {title: spotName, \r\n                            description: spotDescription, \r\n                            image: spotImage === '' ? 'https://bhmlib.org/wp-content/themes/cosimo-pro/images/no-image-box.png' : spotImage, \r\n                            coords: spotLocation},\r\n                            ...spotList]))}}\r\n                     color='primary' className='done-button' variant=\"extended\">\r\n                Done\r\n                </Fab>\r\n            </Link>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default AddSpot;","import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Link } from 'react-router-dom';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Button from '@material-ui/core/Button';\r\nimport '../SharedComponentStyles/CardForm.css';\r\n\r\nconst SignIn = _ => {\r\n\r\n    const handleSignIn = _ => {\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='action-container'>\r\n            <Card className='action-card'>\r\n                <CardContent>\r\n                    <h1>Sign In</h1>\r\n                    <Formik\r\n                        initialValues={{\r\n                            email: '',\r\n                            password: ''\r\n                        }}\r\n                        onSubmit={async values => alert(JSON.stringify(values))}\r\n                    >\r\n                        <Form>\r\n                            <TextField className='inputs action-text-field' id='standard-basic' label='Email' type='email' />\r\n                            <TextField className='inputs action-text-field' id='standard-basic' label='Password' type='password' />\r\n                            <div className='card-buttons-container'>\r\n                                <div>\r\n                                    <Link to='/the-spot/' style={{ textDecoration: 'none' }}>\r\n                                        <Fab onClick={handleSignIn} color='primary' className='main-action-button' variant=\"extended\">\r\n                                            Sign In\r\n                                        </Fab>\r\n                                    </Link>\r\n                                </div>\r\n                                <div>\r\n                                    <Link to='/the-spot/register' style={{ textDecoration: 'none', color: 'black' }}>\r\n                                        <p>Register</p>\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    </Formik>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignIn;","import React, { useState } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Link } from 'react-router-dom';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport '../SharedComponentStyles/CardForm.css';\r\n\r\nconst Register = _ => {\r\n    const [registerName, setRegisterName] = useState('');\r\n    const [registerEmail, setRegisterEmail] = useState('');\r\n    const [registerPassword, setRegisterPassword] = useState('');\r\n\r\n    const handleRegister = _ => {\r\n        fetch('localhost:3001/register', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                name: registerName,\r\n                email: registerEmail,\r\n                password: registerPassword\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .catch(err => alert('Could not register user'))\r\n    }\r\n\r\n    return (\r\n        <div className='action-container'>\r\n        <Card className='action-card'>\r\n            <CardContent>\r\n                <h1>Register</h1>\r\n                <Formik\r\n                    initialValues={{\r\n                        email: '',\r\n                        password: ''\r\n                    }}\r\n                    onSubmit={async values => alert(JSON.stringify(values))}\r\n                >\r\n                    <Form>\r\n                        <TextField className='inputs action-text-field' id='standard-basic' label='Name' type='name' onChange={event => setRegisterName(event.target.value)}/>\r\n                        <TextField className='inputs action-text-field' id='standard-basic' label='Email' type='email' onChange={event => setRegisterEmail(event.target.value)}/>\r\n                        <TextField className='inputs action-text-field' id='standard-basic' label='Password' type='password'  onChange={event => setRegisterPassword(event.target.value)}/>\r\n                        <div className='card-buttons-container'>\r\n                            <div>\r\n                                {/* <Link to='/the-spot/' style={{ textDecoration: 'none' }}> */}\r\n                                    <Fab onClick={handleRegister} color='primary' className='main-action-button' variant=\"extended\">\r\n                                        Register\r\n                                    </Fab>\r\n                                {/* </Link> */}\r\n                            </div>\r\n                            <div>\r\n                                <Link to='/the-spot/sign-in' style={{ textDecoration: 'none', color: 'black' }}>\r\n                                    <p>Sign In</p>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </Form>\r\n                </Formik>\r\n            </CardContent>\r\n        </Card>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Register;","import React from 'react';\nimport './App.css';\nimport SpotCard from './components/SpotCard/SpotCard';\nimport AddSpotButton from './components/AddSpotButton/AddSpotButton';\nimport NavBar from './components/NavBar/NavBar';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom';\nimport AddSpot from './components/AddSpot/AddSpot';\nimport { useSelector } from 'react-redux';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\n\nexport default function App() {\n  const spotList = useSelector(state => state.modifySpotList.spotList);\n  const searchText = useSelector(state => state.changeSearch.searchText);\n\n  //test spot list for testing purposes\n  // const spotList = [\n  //   {\n  //     title: 'Test 1',\n  //     description: 'This is a description',\n  //     image: '',\n  //     coords: ''\n  //   },\n  //   {\n  //     title: 'Test 2',\n  //     description: 'This is a description',\n  //     image: '',\n  //     coords: ''\n  //   },\n  //   {\n  //     title: 'Test 3',\n  //     description: 'This is a description',\n  //     image: '',\n  //     coords: ''\n  //   },\n  //   {\n  //     title: 'Test 4',\n  //     description: 'This is a description',\n  //     image: '',\n  //     coords: ''\n  //   },\n  //   {\n  //     title: 'Test 5',\n  //     description: 'This is a description',\n  //     image: '',\n  //     coords: ''\n  //   },\n  //   {\n  //     title: 'Test 6',\n  //     description: 'This is a description',\n  //     image: '',\n  //     coords: ''\n  //   },\n  // ]\n\n  const DisplaySpots = props => {\n    if(props.list.length === 0) {\n      return <p style={{textAlign: 'center', marginTop: '15%', fontSize: '1.5rem'}}>No spots found, <Link to='/the-spot/add-spot' style={{color: 'black'}}><strong>add one now!</strong></Link></p>\n    } else if(props.list.length > 0) {\n      return props.list.map(spot => {\n        return <SpotCard title={spot.title} description={spot.description} image={spot.image} coords={spot.coords}/>\n      })\n    } else {\n      return null;\n    }\n  }\n    return (\n      <Router>\n        <div>\n          <Switch>\n            <Route exact path='/the-spot'>\n              <NavBar />\n              {/* <h1 onClick={()=>alert(`Spots: ${spotList}\\nSearch Text: ${searchText}`)}>Click for state</h1> */}\n              <p className='recent-spots'>Recently added</p>\n              <div id='spots-grid' className={spotList.length === 0 ? '' : 'spots-grid'}>                                                                                \n                {(searchText === '' || searchText === undefined) ? \n                <DisplaySpots list={spotList} /> : \n                <DisplaySpots list={spotList.filter(spot => {\n                  return (spot.title.toLowerCase().includes(searchText.toLowerCase()) || spot.description.toLowerCase().includes(searchText.toLowerCase()));\n                })} />}\n              </div>\n              <Link to='/the-spot/add-spot'><AddSpotButton /></Link>\n            </Route>\n            <Route path='/the-spot/add-spot'>\n              <AddSpot />\n            </Route>\n            <Route path='/the-spot/sign-in'>\n              <SignIn />\n            </Route>\n            <Route path='/the-spot/register'>\n              <Register />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n    ADD_SPOT,\r\n    CHANGE_SEARCH\r\n} from './constants';\r\n\r\nconst initialStateSpotList = {\r\n    spotList: []\r\n}\r\n\r\nexport const modifySpotList = (state = initialStateSpotList, action) => {\r\n    switch (action.type) {\r\n        case ADD_SPOT:\r\n            return {...state, spotList: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initialSearchText = {\r\n    searchText: ''\r\n};\r\n\r\nexport const changeSearch = (state = initialSearchText, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_SEARCH:\r\n            return {...state, searchText: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers } from 'redux';\nimport { modifySpotList, changeSearch } from './reducers';\n\nconst rootReducer = combineReducers({modifySpotList, changeSearch});\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}